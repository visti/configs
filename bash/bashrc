#!/bin/bash
#------------------------------------------////
# Lapbox ~/.bashrc file
# Last Modified 20 January 2009
# Running on Debian GNU/Linux - Lenny
#------------------------------------------////
#------------------------------------------////
# Colors:
#------------------------------------------////


black='\e[0;30m'
blue='\e[0;34m'
green='\e[0;32m'
cyan='\e[0;36m'
red='\e[0;31m'
purple='\e[0;35m'
brown='\e[0;33m'
lightgray='\e[0;37m'
darkgray='\e[1;30m'
lightblue='\e[1;34m'
lightgreen='\e[1;32m'
lightcyan='\e[1;36m'
lightred='\e[1;31m'
lightpurple='\e[1;35m'
yellow='\e[1;33m'
white='\e[1;37m'
nc='\e[0m'

# Auto-complete in sudo
complete -vf sudo

#Ignore case while completing
set completion-ignore-case on

# Enable auto-jump
source /etc/profile

export LESS_TERMCAP_mb=$'\E[01;31m'      # begin blinking
export LESS_TERMCAP_md=$'\E[01;31m'      # begin bold
export LESS_TERMCAP_me=$'\E[0m'          # end mode
export LESS_TERMCAP_se=$'\E[0m'          # end standout-mode                 
export LESS_TERMCAP_so=$'\E[01;44;33m'   # begin standout-mode - info box                              
export LESS_TERMCAP_ue=$'\E[0m'          # end underline
export LESS_TERMCAP_us=$'\E[01;32m'      # begin underline
export GREP_OPTIONS='--color=auto'
export DE="awesome"
export editor="vim"

# Android path

export PATH="/home/visti/android-sdk-linux_86/tools/:${PATH}"
export PATH="/usr/share/perl5/vendor_perl/auto/share/dist/Cope:${PATH}"
#------------------------------------------////
# Proxy:
#------------------------------------------////
#http_proxy=http://127.0.0.1:8118/
#HTTP_PROXY=$http_proxy
#export http_proxy HTTP_PROXY

#------------------------------------------////
# Aliases:
#------------------------------------------////
## make ls list by size
##alias ls='du -s */* | sort -n'
alias sudo='sudo -E'
alias findbig='find . -type f -exec ls -sh {} \; | sort -n -r | head -5'
alias music='mocp'
alias ports='netstat -nape --inet'
alias ping='ping -c 4'
alias ns='netstat -alnp --protocol=inet'
alias search='aptitude search'
alias show='aptitude show'
alias ls='ls --color=always'
alias la='ls -Al'
alias lx='ls -lXB'
alias lk='ls -lSr'
alias lc='ls -lcr'
alias uusb='sudo umount /media'
alias musb='sudo mount /dev/sdb1 /media'
alias sudo='sudo -s'
alias lu='ls -lur'
alias lr='ls -lR'
alias lt='ls -ltr'
alias lm='ls -al |more'
alias py='python'
alias lr='ls -R' # using ls recursively - Handy with grep
alias vimprobable ='http_proxy="127.0.0.1:8118" vimprobable2'
alias subl="/mnt/c/Program\ Files/Sublime\ Text\ 3/sublime_text.exe"
alias xp='explorer.exe .'

#Gramex Stationsbehandling

bashrc ()
{
  sudo cp ~/bash ~/.bashrc
  source ~/.bashrc
}


alias 100fm=bauer
alias alfa=solo
alias gofm=solo
alias radiom=solo
alias silkeborg=solo
alias vlr=jyskfynske
alias voice=bauer
alias victoria=globus
alias viva=globus
alias skala=jyskfynske

bauer ()
{
  export LANG=da_DK.iso-8859-1
  rm samlet.*
  cat *txt >> samlet.tsv
  #echo "Date of Broadcasting;Track starting time;Track playing time;GramexID;Side;Tracknummer;Album Title;Track Title;Main Artist;ISRC-code;Record label;Catalogue no;Country of Recording;Year of first release;Local ID" > samlet.txt
  cat samlet.tsv | sed 's/./&;/185;s/./&;/179;s/./&;/173;s/./&;/168;s/./&;/163;s/./&;/153;s/./&;/128;s/./&;/78;s/./&;/28;s/./&;/19;s/./&;/14;s/./&;/6' >> samlet.txt
  echo "Date of Broadcasting;Track starting time;Track playing time;Local-ID;Track Title;Main Artist;Record Label;GramexID;Side;Tracknummer;Country of Recording;Year of first release;ISRC-Code" > samlet.tsv
  awk '!/[0-9]{4}:[0-9]{2}|;R1 |; R1 |TOP HOUR|99999998|VO \w*:|jingle|SWEEPER|sweeper|Sweeper|;SOFT |RADIO SOFT|MR SW|PR MR|;MR |BREAKER|NYHEDER|Nyheder|PROMO|promo|Promo|Vejr|VEJR|vejr|Bauer|BAUER|bauer/' samlet.txt >> samlet.tsv
  mv samlet.tsv samlet.csv

  echo "Date of Broadcasting;Track starting time;Track playing time;GramexID;Side;Tracknummer;Album Title;Track Title;Main Artist;ISRC-code;Record label;Catalogue no;Country of Recording;Year of first release;Local ID" > headlines.csv

}

jyskfynske ()
{
  export LANG=da_DK.iso-8859-1
  rm samlet.* 
  # Use a loop to handle both .DEN and .txt files
  for file in *.{DEN,txt}
  do
    # Remove the first line from each file and append to a consolidated file
    sed '1d' "$file" >> no_header.den
  done
  # Insert semicolons at specified character positions to format the data into columns
  sed 's/./&;/297;s/./&;/291;s/./&;/288;s/./&;/267;s/./&;/216;s/./&;/200;s/./&;/149;s/./&;/98;s/./&;/47;s/./&;/37;s/./&;/28;s/./&;/27;s/./&;/20;s/./&;/11;' no_header.den > samlet.tsv
  # Create the header for the CSV file
  echo "Date of Broadcasting;Track starting time;Track playing time;GramexID;Side;Tracknummer;Album Title;Track Title;Main Artist;ISRC-code;Record label;Catalogue no;Country of Recording;Year of first release;Local ID" > samlet.csv
  # Filter out unwanted data and append remaining data to the CSV file
  awk '!/[0-9]{3}:[0-9]{2}|[0-9]{4}:[0-9]{2}|vejr|VEJR|Vejle|VEJLE|vejle|;CLASSIC |;DPH |Classic FM|;RW\*| RV | REK | INTRO |GMMJ| intro |ACC HAPPY|SPONSOR|VIBORG|RV_|\*RV|WB_| SW |SWEEPER|VLR|TOH | TOH|SW_Unknown Artist|SKALA LISTEN|SKALA_|_SKALA|jfm|_Skala|FESTUDVALGET|Festudvalget|Skala_|SKALA FM|PROMO|nyheder|Reklame|REKLAME|TOH SKALA|FEST_|vejrsyd|vejr \[|LISTEN_COUNT|DST_/' samlet.tsv >> samlet.csv
  # Clean up intermediate files
  rm samlet.tsv no_header.den
}


klassisk ()
{
    export LANG=da_DK.iso-8859-1
    rm samlet.txt
    cat *Klassisk* >> samlet.txt
    awk '!/RK Sw/' samlet.txt > samlet.tsv
    sed -e 's/;/:/g' samlet.tsv > samlet.txt
    mv samlet.txt samlet.csv

    cat samlet.tsv | sed 's/./&;/459;s/./&;/452;s/./&;/446;s/./&;/443;s/./&;/432;s/./&;/407;s/./&;/387;s/./&;/327;s/./&;/267;s/./&;/223;s/./&;/179;s/./&;/129;s/./&;/79;s/./&;/29;s/./&;/19;s/./&;/14;s/./&;/6;s/./&-/4;s/./&-/2;' > samlet.txt

    echo "Date of Broadcasting;Track starting time;Track playing time;Local ID;Album Title;Track title;Work Title;Composer;Conductor;Main Artist;Orchestra;Catalogue no;Record label;GramexID;Side;Tracknummer;Country of Recording;Year of first release" > samlet.tsv
    cat samlet.txt >> samlet.tsv
    mv samlet.tsv samlet.csv

    head -n 5 samlet.csv

}

solo ()
{
  export LANG=da_DK.iso-8859-1
  echo "Date of Broadcasting;Track starting time;Track playing time;GramexID;Side;Tracknummer;Album Title;Track Title;Main Artist;ISRC-code;Record label;Catalogue no;Country of Recording;Year of first release;Local ID" > samlet.tsv
  cat *txt >> samlet.tsv
  awk '/DJ LUFFE|Various|VARIOUS|DIVERSE|Diverse|MEGAMIX|SOUL MIX|Soul Mix|80s|[0-9]{4}:[0-9]{2}|[0-9]{3}:[0-9]{2}|;00:00;|Megamix|time*a|time*b|time*c|AlfaDut|Various|Silkeborg|ABC/' *txt > afvist.txt
  awk '!/DJ LUFFE|Various|VARIOUS|DIVERSE|Diverse|MEGAMIX|SOUL MIX|Soul Mix|80s|[0-9]{4}:[0-9]{2}|[0-9]{3}:[0-9]{2}|;00:00;|Megamix|time*a|time*b|time*c|AlfaDut|Various|Silkeborg|ABC/' samlet.tsv > samlet.txt
  rm *tsv
}

anr ()
{
  export LANG=da_DK.iso-8859-1
  sed '1d' *den > no_header.den
  echo "Date of Broadcasting;Track starting time;Track playing time;GramexID;Side;Tracknummer;Album Title;Track Title;Main Artist;ISRC-code;Record label;Catalogue no;Country of Recording;Year of first release;Local ID" > samlet.tsv
  cat no_header.den | sed 's/./&;/297;s/./&;/291;s/./&;/288;s/./&;/267;s/./&;/216;s/./&;/200;s/./&;/149;s/./&;/98;s/./&;/47;s/./&;/37;s/./&;/28;s/./&;/27;s/./&;/20;s/./&;/11;' >> samlet.tsv
  awk '!/[0-9]{4}:[0-9]{2}|[0-9]{3}:[0-9]{2}|\[S\]|SWEEP|FUNKYTOWN|BREAKER|ANR|DJ H*YER|NY MUSIK|BOULEVARDEN|TRACK BED|NORDJYSKE|Nordjyske|INTROBED|BREAKBED|;ID |RN SWE/' samlet.tsv > samlet.csv
  rm no_header*
  rm *tsv

}


globus ()
{
  sed --debug -i 's/ - /;/g' *txt
  awk '/;[1-9][0-9]:[0-9]{2};|MEGAMIX|Megamix|megamix/' *txt >> afvist.csv
  perl -ni.bak -e 'print unless /;[1-9][0-9]:[0-9]{2};|MEGAMIX|Megamix|megamix/' *txt
  mkdir bak
  mv *.bak bak/
  find . -name '*' -size 0 -print0 | xargs -0 rm
}

#alias rm='rm -i'
#------------------------------------------////
# Functions and Scripts:
#------------------------------------------////
localnet ()
{
/sbin/ifconfig | awk /'inet addr/ {print $2}'
echo ""
/sbin/ifconfig | awk /'Bcast/ {print $3}'
echo ""
}
myip ()
{
elinks -dump http://checkip.dyndns.org:8245/ | grep "Current IP Address" | cut -d":" -f2 | cut -d" " -f2
}
upinfo ()
{
echo -ne "${green}$HOSTNAME ${red}uptime is ${cyan} \t ";uptime | awk /'up/ {print $3,$4,$5,$6,$7,$8,$9,$10}'
}
cd()
{
  if [ -n "$1" ]; then
    builtin cd "$@" && ls
  else
    builtin cd ~ && ls
  fi
}
weather ()
{
declare -a WEATHERARRAY
WEATHERARRAY=( `lynx -dump "http://www.google.com/search?hl=en& â€¦ tnG=Search" | grep -A 5 -m 1 "Weather for" | sed 's;\[26\]Add to iGoogle\[27\]IMG;;g'`)
echo ${WEATHERARRAY[@]}
}

encrypt ()
{
gpg -ac --no-options "$1"
}

decrypt ()
{
gpg --no-options "$1"
}

thumbdir ()
{
for i; do
    command dir *."$i" | xargs -l thumbnail
    done
}

isomount()
{
for i ; do
    command sudo mount -v -o loop -t iso9660 "$i" /mnt/image
    done
}

extract()
{
if [ -f "$1" ] ; then
case "$1" in
*.7z) 7z x "$1" ;;
*.tar.bz2) tar xjf "$1" ;;
*.tar.gz) tar xzf "$1" ;;
*.tar.Z) tar xzf "$1" ;;
*.bz2) bunzip2 "$1" ;;
*.rar) unrar x "$1" ;;
*.gz) gunzip "$1" ;;
*.jar) unzip "$1" ;;
*.tar) tar xf "$1" ;;
*.tbz2) tar xjf "$1" ;;
*.tgz) tar xzf "$1" ;;
*.zip) unzip "$1" ;;
*.Z) uncompress "$1" ;;
*) echo "'$1' cannot be extracted." ;;
esac
else
echo "'$1' is not a file."
fi
}
#------------------------------------------////
# Some original .bashrc contents:
#------------------------------------------////
# If not running interactively, don't do anything
[ -z "$PS1" ] && return
# don't put duplicate lines in the history. See bash(1) for more options
export HISTCONTROL=ignoredups
# update the values of LINES and COLUMNS.
shopt -s checkwinsize
# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(lesspipe)"
# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi
#PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
#------------------------------------------////
# Prompt:
#------------------------------------------////


#PS1='\[\e[1;32m\]\u\[\e[m\] \[\e[1;34m\][\w]\[\e[m\] \[\e[0;31m\]\$ \[\e[m\]\[\e[0;32m\]'

#------------------------------------------////
# System Information:
#------------------------------------------////
clear
echo -e "${LIGHTGRAY}";figlet "GRAMEX";
echo ""
echo -ne "${red}Today is:\t\t${cyan}" `date`; echo ""
echo -e "${red}Kernel Information: \t${cyan}" `uname -smr`
echo -ne "${cyan}";upinfo;echo ""
echo -e "${cyan}"; cal -3
echo ""



eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
eval "$(oh-my-posh init bash --config $(brew --prefix oh-my-posh)/themes/jandedobbeleer.omp.json)"

if command -v tmux &> /dev/null && [ -n "$PS1" ] && [[ ! "$TERM" =~ screen ]] && [[ ! "$TERM" =~ tmux ]] && [ -z "$TMUX" ]; then
  exec tmux
fi
